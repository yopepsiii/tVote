name: build & deploy of tvote

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-22.04
    environment:
      name: test
    env:
      database_hostname: ${{secrets.database_hostname}}
      database_port: ${{secrets.database_port}}
      database_password: ${{secrets.database_password}}
      database_name: ${{secrets.database_name}}
      database_username: ${{secrets.database_username}}
      secret_key: ${{secrets.secret_key}}
      algorithm: ${{secrets.algorithm}}
      access_token_expire_minutes: ${{secrets.access_token_expire_minutes}}
      google_client_id: ${{secrets.google_client_id}}
      google_client_secret: ${{secrets.google_client_secret}}

    services:
      postgres:
        image: postgres
        env:
          postgres_password: ${{secrets.database_password}}
          postgres_db: ${{secrets.database_name}}_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis
        ports:
          - 6379:6379
        env:
          redis_host: redis
          redis_port: 6379

    steps:
      #  --------------- Тестирование на машине GitHub ---------------
      - name: checkout our code
        uses: actions/checkout@v4.1.1
      - name: setup python
        uses: actions/setup-python@v5.1.0
        with:
          python-version: '3.12'
      - name: Update pip
        run: python -m pip install --upgrade pip
      - name: install requirements.txt
        run: pip install -r requirements.txt
      - name: Start tests
        run: |
          pip install pytest
          pytest tests
      #  --------------- Билд Docker Image & Залив на Docker Hub ---------------
      - name: Login to Docker Hub
        uses: docker/login-action@v3.1.0
        with:
          username: ${{ secrets.docker_hub_username }}
          password: ${{ secrets.docker_hub_token }}
      - name: Set Up Docker BuildX
        uses: docker/setup-buildx-action@v3
        with:
          version: v0.10.0
      - name: Build and Push
        uses: docker/build-push-action@v5
        with:
          context: ./
          file: ./dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ secrets.docker_hub_username }}/tVote:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

  deploy:
    runs-on: ubuntu
    needs: [build]
    environment:
      name: production
    steps:
      - name: checkout our code
        uses: actions/checkout@v4.1.1
      - name: deploy to ubuntu vps
        uses: appleboy/ssh-action@master
        with:
          host: ${{secrets.prod_host}}
          username: ${{secrets.prod_username}}
          password: ${{secrets.prod_password}}
          script: |
            cd app/src/tVote
            git pull
            docker compose -f docker-compose-prod.yml up -d

          # .env уже должен лежать на серваке


